序列化serialize()：序列化说通俗点就是把一个对象变成可以传输的字符串
反序列化unserialize()：就是把被序列化的字符串还原为对象,然后在接下来的代码中继续使用。
序列化和反序列化本身没有问题,但是如果反序列化的内容是用户可以控制的,且后台不正当的使用了PHP中的魔法函数,就会导致安全问题
常见的几个魔法函数:
__construct()当一个对象创建时被调用          
__destruct()当一个对象销毁时被调用          
__toString()当一个对象被当作一个字符串使用         
__sleep() 在对象在被序列化之前运行          
__wakeup将在序列化之后立即被调用
按照反序列化的要求unserialize()函数的参数可控并都有相同的一个类，并存在一个构建函数
使用serialize()函数进行序列化执行结果为O:1:"S":1:{s:4:"test";s:29:"<script>alert('xss')</script>";}

使用序列化之后的数据提交
可以看到提示成功
原理是使用使用serialize()函数进行序列化执行结果为O:1:"S":1:{s:4:"test";s:29:"<script>alert('xss')</script>";}
然后提交到页面传参到后端，后端使用unserialize()进行反序列化成php代码并执行。
