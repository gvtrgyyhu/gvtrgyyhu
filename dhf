void CreateFood(pGSnake ps) {
	int x = 0;
	int y = 0;
again:
	do {
		x = rand() % 47 + 6;
		y = rand() % 25 + 3;
	} while (x % 2 != 0);
	pSnakeNode cur = ps->_pSnake;
	while (cur) {
		if (cur->x == x && cur->y == y) {
			goto again;
		}
		cur = cur->next;
	}
	pSnakeNode pFood = (pSnakeNode)malloc(sizeof(SnakeNode));
	pFood->x = x;
	pFood->y = y;
	SetPos(x, y);
	wprintf(L"%lc", FOOD);
	ps->_pFood = pFood;
};
 
void GameStart(pGSnake ps) {
	//一.设置控制台以及光标
 
	//设置控制台窗口的大小
	system("mode con cols=100 lines=36");
	//设置控制台窗口的名字
	system("title 贪吃蛇");
	//获得标准输出设备的句柄
	HANDLE houtput = NULL;
	houtput = GetStdHandle(STD_OUTPUT_HANDLE);
	//定义一个光标信息的结构体
	CONSOLE_CURSOR_INFO cursor_info = { 0 };
	//获取和houput句柄相关的控制台上的光标的信息，存放在cursor_info中
	GetConsoleCursorInfo(houtput, &cursor_info);
	//修改光标信息
	cursor_info.bVisible = false;//可见度
	//设置和houtput句柄相关的控制台上的光标的信息
	SetConsoleCursorInfo(houtput, &cursor_info);
 
	//二.打印欢迎界面
	WelcomeToGame();
 
	//三.创建地图
	CreateMap();
 
	//四.初始化蛇
	InitSnake(ps);
 
	//五.随机生成食物
	CreateFood(ps);
 
};
 
void PrintHelpInfo()
{
	SetPos(60, 10);
	wprintf(L"用 ↑. ↓ . ← . → 来控制蛇的移动方向");
	SetPos(70, 12);
	wprintf(L"按F3加速，F4减速");
	SetPos(66, 14);
	printf("加速可以获得更更高的分数");
}
void pause() {
	while (1) {
		Sleep(1);
		if (KEY_PRESS(VK_SPACE)) {
			break;
		}
	}
 
}
int NextisFood(pSnakeNode pNextNode, pGSnake ps) {
	if (ps->_pFood->x == pNextNode->x && ps->_pFood->y == pNextNode->y) {
		return 1;
	}
	return 0;
}
void EatFood(pSnakeNode pNextNode, pGSnake ps) {
	ps->_pFood->next = ps->_pSnake;
	ps->_pSnake = ps->_pFood;
	free(pNextNode);
	pSnakeNode cur = ps->_pSnake;
	while (cur) {
		SetPos(cur->x, cur->y);
		wprintf(L"%lc", L'●');
		cur = cur->next;
	}
	ps->_Score += ps->_FoodWeight;
	CreateFood(ps);
 
}
